version: '3.8'

services:
  # Elasticsearch for log storage and search
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: recruitment-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.monitoring.enabled=true
      - xpack.monitoring.collection.enabled=true
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - recruitment-monitoring
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Logstash for log processing and parsing
  logstash:
    image: logstash:8.11.0
    container_name: recruitment-logstash
    restart: unless-stopped
    ports:
      - "5044:5044"  # Beats input
      - "9600:9600"  # API
    environment:
      - LS_JAVA_OPTS=-Xmx1g -Xms1g
      - xpack.monitoring.enabled=true
      - xpack.monitoring.elasticsearch.hosts=http://elasticsearch:9200
    volumes:
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - logstash_data:/usr/share/logstash/data
    networks:
      - recruitment-monitoring
    depends_on:
      elasticsearch:
        condition: service_healthy

  # Kibana for log visualization and dashboards
  kibana:
    image: kibana:8.11.0
    container_name: recruitment-kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.monitoring.enabled=true
      - xpack.monitoring.ui.enabled=true
    volumes:
      - kibana_data:/usr/share/kibana/data
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - recruitment-monitoring
    depends_on:
      elasticsearch:
        condition: service_healthy

  # Filebeat for log collection from containers
  filebeat:
    image: elastic/filebeat:8.11.0
    container_name: recruitment-filebeat
    restart: unless-stopped
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data:/usr/share/filebeat/data
    networks:
      - recruitment-monitoring
    command: filebeat -e -strict.perms=false

  # Metricbeat for system and service metrics
  metricbeat:
    image: elastic/metricbeat:8.11.0
    container_name: recruitment-metricbeat
    restart: unless-stopped
    user: root
    volumes:
      - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
      - metricbeat_data:/usr/share/metricbeat/data
    networks:
      - recruitment-monitoring
    command: metricbeat -e -strict.perms=false

volumes:
  elasticsearch_data:
    driver: local
  logstash_data:
    driver: local
  kibana_data:
    driver: local
  filebeat_data:
    driver: local
  metricbeat_data:
    driver: local

networks:
  recruitment-monitoring:
    driver: bridge